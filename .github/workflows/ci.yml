name: ci

on:
  push:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    env:
      TARGET_REPO: mullerdavid2/certbot-dns-godaddy
    steps:
#      - name: Install jq
#        id: dependency-jq
#        run: sudo apt update && sudo apt install -y jq
      
      - name: Get latest certbot info
        id: certbot-last-updated
        run: echo LAST_UPDATED=$(curl -s https://hub.docker.com/v2/repositories/certbot/certbot/tags/latest | jq -r '.last_updated' 2> /dev/null | date +"%s" -f - 2> /dev/null || echo 0) >> $GITHUB_OUTPUT
      
      - name: Get latest self info
        id: self-last-updated
        run: echo LAST_UPDATED=$(curl -s https://hub.docker.com/v2/repositories/${TARGET_REPO}/tags/latest | jq -r '.last_updated' 2> /dev/null | date +"%s" -f - 2> /dev/null || echo 0) >> $GITHUB_OUTPUT
        
      - name: Check if update required
        id: is-new
        run: |
          echo IS_NEW=${{ steps.self-last-updated.outputs.LAST_UPDATED < steps.certbot-last-updated.outputs.LAST_UPDATED || github.event_name != 'schedule' }} >> $GITHUB_OUTPUT
#          echo ${{ steps.certbot-last-updated.outputs.LAST_UPDATED }}
#          echo ${{ steps.self-last-updated.outputs.LAST_UPDATED }}
#          echo ${{ github.event_name }}
      
      - name: Check out the repo
        if: ${{ fromJSON(steps.is-new.outputs.IS_NEW) }}
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        if: ${{ fromJSON(steps.is-new.outputs.IS_NEW) }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Extract metadata (tags, labels) for target repo
        if: ${{ fromJSON(steps.is-new.outputs.IS_NEW) }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.TARGET_REPO }}
          flavor: latest=true
      
      - name: Build and push Docker image
        if: ${{ fromJSON(steps.is-new.outputs.IS_NEW) }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
